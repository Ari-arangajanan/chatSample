package com.wonder.chatSample.xmpp;import org.springframework.stereotype.Service;@Servicepublic class XMPPService {//    private final XMPPConnection connection;////    public XMPPService(XMPPConnection connection, ChatManager chatManager) {//        this.connection = connection;//    }//////    public void sendMessage(String toJid, String message) throws SmackException.NotConnectedException, XmppStringprepException, InterruptedException {////        EntityBareJid jid = JidCreate.entityBareFrom(toJid);////        Chat chat = chatManager.chatWith(jid);////        chat.send(message);////    }//////    public void sendMessage(String toJid, String messageText) throws Exception {//        ChatManager chatManager = ChatManager.getInstanceFor(connection);//        EntityBareJid jid = JidCreate.entityBareFrom(toJid);//        Chat chat = chatManager.chatWith(jid);////        // Using MessageBuilder to create the message//        Message message = MessageBuilder.buildMessage()//                .ofType(Message.Type.chat)//                .to(jid)//                .setBody(messageText)//                .build();//        chat.send(message);//    }//////    @PostConstruct//    public void initialize() {//        ChatManager chatManager = ChatManager.getInstanceFor(connection);//        chatManager.addIncomingListener((from, message, chat) -> {//            System.out.println("Received message: " + message.getBody());//            // Push to frontend or process further//        });//    }}